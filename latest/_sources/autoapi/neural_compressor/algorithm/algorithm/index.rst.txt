:py:mod:`neural_compressor.algorithm.algorithm`
===============================================

.. py:module:: neural_compressor.algorithm.algorithm

.. autoapi-nested-parse::

   Register algorithms.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.algorithm.algorithm.ALGORITHMS
   neural_compressor.algorithm.algorithm.AlgorithmScheduler
   neural_compressor.algorithm.algorithm.Algorithm



Functions
~~~~~~~~~

.. autoapisummary::

   neural_compressor.algorithm.algorithm.algorithm_registry



.. py:function:: algorithm_registry(algorithm_type, location)

   Decorate and register all Algorithm subclasses.

   :param cls: The class of register.
   :type cls: class
   :param algorithm_type: The algorithm registration name
   :type algorithm_type: str
   :param location: The location to call algorithms
   :type location: str

   :returns: The class of register.
   :rtype: cls


.. py:class:: ALGORITHMS

   Bases: :py:obj:`object`

   Build a dict for registered algorithms.

   .. py:method:: support_algorithms()
      :classmethod:

      Get all algorithms.

      :returns: A set of all algorithms.
      :rtype: Set



.. py:class:: AlgorithmScheduler(conf)

   Bases: :py:obj:`object`

   control the Algorithm in different phase.

   .. py:property:: origin_model

      Return the origin model.

      :returns: The origin model.
      :rtype: model

   .. py:property:: q_model

      Return the quantized model.

      :returns: The quantized model.
      :rtype: model

   .. py:property:: dataloader

      Return the dataloader.

      :returns: The dataloader.
      :rtype: dataloader

   .. py:property:: adaptor

      Return the adaptor.

      :returns: The adaptor.
      :rtype: adaptor

   .. py:property:: calib_iter

      Return the calibration iter number.

      :returns: The calibration iter number.
      :rtype: calib_iter

   .. py:method:: append_algorithm(location, algorithm)

      Append algorithm to list of executed algorithms.

      :param location: The location to call algorithm
      :param algorithm: algorithm instance


   .. py:method:: reset_exec_algorithms()

      Reset the list of executed algorithms.



.. py:class:: Algorithm

   Bases: :py:obj:`object`

   The base class of algorithm.


