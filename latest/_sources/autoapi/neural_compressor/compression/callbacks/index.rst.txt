:py:mod:`neural_compressor.compression.callbacks`
=================================================

.. py:module:: neural_compressor.compression.callbacks

.. autoapi-nested-parse::

   This is a module for Component class.

   The Component class will be inherited by the class 'QuantizationAwareTrainingCallbacks',
   'PruningCallbacks' and 'DistillationCallbacks'.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.compression.callbacks.BaseCallbacks
   neural_compressor.compression.callbacks.QuantizationAwareTrainingCallbacks
   neural_compressor.compression.callbacks.PruningCallbacks
   neural_compressor.compression.callbacks.DistillationCallbacks




.. py:class:: BaseCallbacks(conf=None, model=None)

   Bases: :py:obj:`object`

   This is base class of Neural Compressor Callbacks.

   This class will be inherited by the class 'QuantizationAwareTrainingCallbacks',
   'PruningCallbacks' and 'DistillationCallbacks'.
   This design is mainly for pruning/distillation/quantization-aware training.
   In this class will apply all hooks for 'Quantization', 'Pruning' and 'Distillation'.

   .. py:property:: model

      Getter of model in neural_compressor.model.

   .. py:property:: train_func

      Not support get train_func.

   .. py:property:: eval_func

      Not support get eval_func.

   .. py:property:: eval_dataloader

      Getter to eval dataloader.

   .. py:property:: metric

      Get `metric` attribute.

   .. py:method:: on_train_begin(dataloader=None)

      Be called before the beginning of training.


   .. py:method:: on_train_end()

      Be called after the end of training.


   .. py:method:: on_epoch_begin(epoch)

      Be called on the beginning of epochs.


   .. py:method:: on_step_begin(batch_id)

      Be called on the beginning of batches.


   .. py:method:: on_after_compute_loss(input, student_output, student_loss, teacher_output=None)

      Be called on the end of loss computation.


   .. py:method:: on_before_optimizer_step()

      Be called before optimizer step.


   .. py:method:: on_after_optimizer_step()

      Be called after optimizer step.


   .. py:method:: on_before_eval()

      Be called before evaluation.


   .. py:method:: on_after_eval()

      Be called after evaluation.


   .. py:method:: on_step_end()

      Be called on the end of batches.


   .. py:method:: on_epoch_end()

      Be called on the end of epochs.


   .. py:method:: register_hook(scope, hook, input_args=None, input_kwargs=None)

      Register hook for component.

      Input_args and input_kwargs are reserved for user registered hooks.


   .. py:method:: pre_process()

      Create strategy to optimize model.


   .. py:method:: execute()

      Quantization Aware Training execute routinue based on strategy design.


   .. py:method:: remove_hook(scope, hook)

      Remove hooks if user want to tune accuracy with train_func.



.. py:class:: QuantizationAwareTrainingCallbacks(conf=None, model=None)

   Bases: :py:obj:`BaseCallbacks`

   This is the class for callbacks of quantization aware training.

   This design is mainly for Quantization-Aware Training.
   In this class will apply all hooks for Quantization-Aware Training.


.. py:class:: PruningCallbacks(conf=None, model=None)

   Bases: :py:obj:`BaseCallbacks`

   This is the class for callbacks of pruning object.

   In this class will apply all hooks for Pruning.

   .. py:method:: on_train_end()

      Be called after the end of training.


   .. py:method:: generate_hooks()

      Register hooks for pruning.



.. py:class:: DistillationCallbacks(conf=None, model=None)

   Bases: :py:obj:`BaseCallbacks`

   Distillation class derived from Component class.

   Distillation class abstracted the pipeline of knowledge distillation,
   transfer the knowledge of the teacher model to the student model.

   :param conf: Distillation_Conf containing teacher model, distillation criterion etc.
   :param model: Student model.

   .. attribute:: _epoch_ran

      A integer indicating how much epochs ran.

   .. attribute:: eval_frequency

      The frequency for doing evaluation of the student model
      in terms of epoch.

   .. attribute:: best_score

      The best metric of the student model in the training.

   .. attribute:: best_model

      The best student model found in the training.

   .. py:property:: criterion

      Getter of criterion.

      :returns: The criterion used in the distillation process.

   .. py:property:: teacher_model

      Getter of the teacher model.

      :returns: The teacher model used in the distillation process.

   .. py:property:: student_model

      Getter of the student model.

      :returns: The student model used in the distillation process.

   .. py:property:: train_cfg

      Getter of the train configuration.

      :returns: The train configuration used in the distillation process.

   .. py:method:: init_train_cfg()

      Initialize the training configuration.


   .. py:method:: create_criterion()

      Create the criterion for training.


   .. py:method:: generate_hooks()

      Register hooks for distillation.

      Register necessary hooks for distillation pipeline.



